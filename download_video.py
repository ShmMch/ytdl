import os
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
import yt_dlp
import time

# Function to convert Selenium cookies to Netscape format
def save_cookies_netscape_format(cookies, filename='cookies.txt'):
    with open(filename, 'w') as file:
        file.write("# Netscape HTTP Cookie File\n")
        file.write("# This file was generated by Selenium. Edit at your own risk.\n\n")

        for cookie in cookies:
            # Some cookies may not have an expiry; defaulting to 0
            expiry = str(cookie.get('expiry', '0'))
            domain = cookie['domain']
            path = cookie['path']
            secure = 'TRUE' if cookie['secure'] else 'FALSE'
            
            # Writing the cookie in Netscape format
            file.write(f"{domain}\tTRUE\t{path}\t{secure}\t{expiry}\t{cookie['name']}\t{cookie['value']}\n")

# Initialize the WebDriver
options = Options()
options.add_argument("--headless")  # Run headless
options.add_argument('--no-sandbox')
options.add_argument('--disable-dev-shm-usage')
driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)

try:
    # Go to YouTube and log in
    driver.get('https://youtube.com')
    
    # Manual login process; script waits for login completion
    time.sleep(30)  # Adjust time to allow manual login

    # Extract cookies after logging in
    cookies = driver.get_cookies()

    # Print extracted cookies for debugging purposes
    print("Extracted Cookies:", cookies)

    # Save cookies in Netscape format
    save_cookies_netscape_format(cookies)

finally:
    driver.quit()

# Download the video using yt-dlp with the saved cookies
ydl_opts = {
    'cookiefile': 'cookies.txt',
    'outtmpl': 'video.mp4'
}

video_url = os.getenv('VIDEO_URL')

with yt_dlp.YoutubeDL(ydl_opts) as ydl:
    ydl.download([video_url])
